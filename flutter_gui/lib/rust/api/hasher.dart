// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

///frb_marker: #[frb(init)]
Future<void> initApp() => RustLib.instance.api.crateApiHasherInitApp();

Future<CalculateHashesResult> hasherProcess({
  required String directory,
  required String hashAlgorithm,
  required String csvOutputFilename,
}) => RustLib.instance.api.crateApiHasherHasherProcess(
  directory: directory,
  hashAlgorithm: hashAlgorithm,
  csvOutputFilename: csvOutputFilename,
);

///frb_marker: #[frb(sync)]
Future<List<String>> availableHashingAlgorithms() =>
    RustLib.instance.api.crateApiHasherAvailableHashingAlgorithms();

class CalculateHashesResult {
  final double elapsedTimeSecs;
  final int processedFilesCount;

  const CalculateHashesResult({
    required this.elapsedTimeSecs,
    required this.processedFilesCount,
  });

  @override
  int get hashCode => elapsedTimeSecs.hashCode ^ processedFilesCount.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CalculateHashesResult &&
          runtimeType == other.runtimeType &&
          elapsedTimeSecs == other.elapsedTimeSecs &&
          processedFilesCount == other.processedFilesCount;
}
